JSP에서 처리하기 힘들던 Date도 Spring에서는 잘 처리할 수 있다
String과 Model을 같이 사용할 경우 ModelAndView가 낫다
redirect를 해야 삽입/수정/삭제한 열의 반영 결과를 알 수 있다
redirect를 하지 않으면 forward가 되어서 
페이지는 forward 되었지만 attribute를 받지 않아서 list를 보지 못한다


Di
maven project 생성
plugins에 plugin에 java-SE1.8 붙여넣기
maven repository에 Spring Context 4.3.30 RELEASE 붙여넣기

DI : 의존성 주입
IoC : 제어의 역전 (framework가 내 코드를 실행)
AOP : 관점 지향 (중복되는 로직을 재사용하기 위하여 제작됨)

Controller 안에 Service라는 객체가 필요
없으면 에러가 발생
넣어 놓으라는 것이 @Autowired -> Spring이 자동으로 넣어놓아라 (Di)
@Autowired가 없으면 null

Service 안에 DAO라는 객체가 필요
없으면 에러가 발생
넣어 놓으라는 것이 @Autowired -> Spring이 자동으로 넣어놓아라 (Di)
@Autowired가 없으면 null

DAO 안에 JdbcTemplate라는 객체가 필요
beans 안에 jt, ds라는 의존성이 발생
없으면 에러가 발생
넣어 놓으라는 것이 @Autowired -> Spring이 자동으로 넣어놓아라 (Di)
@Autowired가 없으면 null

인스턴스는 한개인데 여러 사람이 참조하여 돌려 쓰자 -> singleton

resources에 appCtx.xml을 생성
Context관련 삭제 -> 자동완성을 위해

bean 생성 
scope에 singleton(기본값)
및 Ex02에서 XML 파일 호출 및 꺼내오기
Ex01과 비교하면서 파악


mybatis
c3p0가 빠지고 mybatis, mybatis-spring 추가

DAO를 interface로 제작 (객체를 만들 수 없으므로 @Repository 사용x)
mybatis-scan으로 spring에서 관리

datasource -> sqlsessionfactorybean -> sqlsessiontemplate

datasource는 추후 hikaricp로 변경

insert, update, delete를 할 땐 매개변수를 무조건 하나로 만들어야 한다


	
