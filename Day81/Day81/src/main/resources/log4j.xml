<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %C{1}.%M (%L) - %m%n" />
		</layout>
	</appender>
	
	<!--  Application Loggers -->
	<logger name="com.itbank.controller">
		<level value="debug" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
	</root>
	
	<!-- 
		Log Level
		1. Fatal : 매우 심각. 프로그램이 종료될 수준의 에러
		2. Error : 심각. 의도치 안은 상황이 발생. 프로그램이 항상 종료되는 에러는 아님
		3. Warn : 경고. 에러가 될 잠재성이 있는 경우
		4. Info : 정보. 간단한 요구사항 확인서 
		5. Debug : 디버깅. info보다 더 자세한 요구사항 확인서
		6. Trace : 추적. debug보다 더 자세한 요구사항 확인서
		
		log4j에서 로그 레벨을 지정하면 해당 로그 이상의 것만 로그로 남긴다
		
		<logger>와 <root> 중 <logger>가 더 우선순위가 높다
		<root>는 지정하지 않은 패키지에서 발생하는 로그 레벨을 지정한다
	 -->
	
</log4j:configuration>
